name: Build and Release

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v2
        with:
          path: ${{ env.USERPROFILE }}\.flutter
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup Flutter
        if: steps.cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.1"

      - name: Run Flutter tests
        run: |
          bash scripts/run_all_tests.bash

  release:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Flutter SDK
        uses: actions/cache@v2
        with:
          path: ${{ env.USERPROFILE }}\.flutter
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup Flutter
        if: steps.cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.1"

      - name: Build Flutter apk
        run: |
          bash scripts/release.bash

      - name: Check if Inno Setup is installed
        run: |
          if not exist "C:\Program Files (x86)\Inno Setup 6\iscc.exe" (
                echo "Inno Setup is not installed. Installing..."
                mkdir C:\Temp
                Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "C:\Temp\is.exe"
                start /wait C:\Temp\is.exe
              ) else (
                echo "Inno Setup is already installed."
              )

      - name: Create Inno Setup script
        run: |
          if not exist "innosetup" mkdir innosetup
          cd release
          cat <<EOF > innosetup/installer_script.iss
          [Setup]
          AppName=epta_calc
          AppVersion=1.0
          DefaultDirName=release
          OutputDir=release
          OutputBaseFilename=installer
          Compression=lzma2
          SolidCompression=yes

          [Files]
          Source: "release/*"; DestDir: "{app}"
          EOF

      - name: Build Inno Setup installer
        run: iscc innosetup/installer_script.iss

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Fixed some bugs. Improved some places. With love, calc team.
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/epta_calc.exe
          asset_name: epta_calc.exe
          asset_content_type: application/octet-stream
